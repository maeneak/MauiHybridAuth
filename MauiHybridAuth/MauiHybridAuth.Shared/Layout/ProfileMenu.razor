@using MauiHybridAuth.Shared.Theme
@using MauiHybridAuth.Shared.Services
@inject IUserInfoService UserInfoService
@inject IFormFactor FormFactor

<MudStack Spacing="4" Justify="Justify.SpaceBetween" AlignItems="AlignItems.Stretch" Style="height:100%">
    <MudStack Row AlignItems="AlignItems.Center" Justify="Justify.SpaceBetween">
        <MudText>Settings</MudText>
        <MudSpacer/>
        <MudIcon Icon="@Icons.Material.Filled.Settings" />
    </MudStack>
    <AuthorizeView >
        <Authorized>
            <MudStack Row Justify="Justify.Center" Spacing="5">
                <MudBadge Color="Color.Success" Overlap="true" Bordered="true" Icon="@Icons.Material.Filled.Check">
                    <MudAvatar Style="width:88px; height:88px;" Rounded>
                        @if (UserInfoService.UserInfo != null)
                        {
                            @if (UserInfoService.UserInfo.ProfilePicture?.Length > 0)
                            {
                                <MudImage Src="@UserInfoService.UserInfo.ProfilePictureBase64" />
                            }
                            else
                            {
                                <MudImage Src="_content/MauiHybridAuth.Shared/img/profile.png" />
                            }
                        }
                        else
                        {
                            <MudImage Src="_content/MauiHybridAuth.Shared/img/profile.png" />
                        }
                    </MudAvatar>
                </MudBadge>
                <MudStack Spacing="0" AlignItems="AlignItems.Start" Justify="Justify.FlexStart">
                    @if (UserInfoService.UserInfo != null)
                    {
                        <MudText Typo="Typo.subtitle2">@($"{UserInfoService.UserInfo.PreferredName}")</MudText>
                        <MudText Typo="Typo.body2">@($"{UserInfoService.UserInfo.Fullname}")</MudText>
                        <MudText Typo="Typo.body2">@UserInfoService.UserInfo.Email</MudText>
                        @if(FormFactor.GetFormFactor() == "Web")
                        {
                            <MudLink Typo="Typo.body2" Href="/Account/Manage">Manage account</MudLink>
                        }
                    }
                    <form action="Account/Logout" method="post">
                        <AntiforgeryToken />
                        <input type="hidden" name="ReturnUrl" value="" />
                        <button type="submit" class="mud-link mud-ripple">
                            <MudLink Typo="Typo.body2">Logout</MudLink>
                        </button>
                    </form>
                </MudStack>
            </MudStack>
        </Authorized>
        <NotAuthorized>
            <MudStack Spacing="0">
                <MudNavLink Href="/Account/Register" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Person">Register</MudNavLink>
                <MudNavLink Href="/Account/Login" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Password">Login</MudNavLink>
            </MudStack>
        </NotAuthorized>
    </AuthorizeView>
    <AuthorizeView Roles="Admin">
        <Authorized>
            @if (FormFactor.GetFormFactor() == "Web")
            {
                <MudStack AlignItems="AlignItems.Start" Class="pa-0 ma-0">
                    <MudLink Href="/Admin" Typo="Typo.body2">Manage all users</MudLink>
                </MudStack>
            }
        </Authorized>
    </AuthorizeView>
    <MudSpacer />
    <MudStack Row Justify="Justify.FlexEnd" Class="pa-0 ma-0">
    </MudStack>
</MudStack>

@code {

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
    }
}
